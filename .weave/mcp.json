{
    "mcpServers": {
      "webcat": {
        "command": "docker",
        "args": [
          "run",
          "-d",
          "--rm",
          "--name", "mcp-webcat",
          "-p", "8000:8000",
          "tmfrisinger/webcat:latest"
        ],
        "env": {
          "SERPER_API_KEY": "your-serper-api-key",
          "WEBCAT_API_KEY": "your-webcat-api-key",
          "PORT": "8000",
          "RATE_LIMIT_WINDOW": "60",
          "RATE_LIMIT_MAX_REQUESTS": "10"
        },
        "popular": true,
        "description": "A simple web search service that falls back to duckduckgo if there is no key"
      },
      "postgres": {
        "command": "docker",
        "args": [
          "run",
          "-d",
          "--rm",
          "--name", "mcp-postgres",
          "-p", "3001:3001",
          "crystaldba/postgres-mcp:latest"
        ],
        "env": {
          "DATABASE_URL": "postgresql://user:password@host:port/database"
        },
        "popular": true,
        "description": "Professional Postgres MCP server for database operations and analytics"
      },
      "browserbase": {
        "command": "docker",
        "args": [
          "run",
          "-d",
          "--rm",
          "--name", "mcp-browserbase",
          "-p", "3002:3002",
          "browserbase/mcp-server:latest"
        ],
        "env": {
          "BROWSERBASE_API_KEY": "your-browserbase-api-key",
          "BROWSERBASE_PROJECT_ID": "your-project-id"
        },
        "popular": true,
        "description": "Browser automation and web scraping service for data extraction"
      },
      "github": {
        "command": "docker",
        "args": [
          "run",
          "-d",
          "--rm",
          "--name", "mcp-github",
          "-p", "3003:3003",
          "modelcontextprotocol/server-github:latest"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "your-github-token"
        },
        "popular": true,
        "description": "GitHub repository management, file operations, and API integration"
      }
    }
  }