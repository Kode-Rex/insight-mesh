{
    "project_name": "insight-mesh",
    "description": "Delivering AI solutions directly into enterprise workflowsâ€”no extra tabs required.",
    "mcp": {
        "config_path": ".weave/mcp.json",
        "description": "MCP Servers you can install as tools",
        "tools": {
            "webcat": {
                "service": "webcat",
                "url": "TODO : look this up as per the `service list` command",
                "description": "Search the web",
                "permissions": [
                    "*",
                    "tmfrisinger@gmail.com"
                ]
            }
        }
    },
    "services": {
        "caddy": {
            "display_name": "Caddy",
            "description": "Web server and reverse proxy",
            "images": [
                "caddy:2.7.4"
            ],
            "container_patterns": [
                "caddy"
            ]
        },
        "webui": {
            "display_name": "OpenWebUI",
            "description": "Web interface for LLMs",
            "images": [
                "tmfrisinger/open-webui:1.0.1"
            ],
            "container_patterns": [
                "openwebui"
            ],
            "depends_on": ["postgres"]
        },
        "litellm": {
            "display_name": "LiteLLM",
            "description": "LLM proxy service",
            "images": [
                "ghcr.io/berriai/litellm:main-latest"
            ],
            "container_patterns": [
                "litellm"
            ],
            "depends_on": ["postgres"]
        },
        "slack-bot": {
            "display_name": "Slack Bot",
            "description": "Slack integration service",
            "images": [
                "slack-bot"
            ],
            "container_patterns": [
                "slack-bot"
            ]
        },
        "dagster": {
            "display_name": "Dagster",
            "description": "Data orchestration platform",
            "images": [
                "dagster"
            ],
            "container_patterns": [
                "dagster"
            ],
            "depends_on": ["postgres", "redis", "elasticsearch", "neo4j"]
        },
        "mcp": {
            "display_name": "MCP Server",
            "description": "Project MCP server",
            "images": [
                "mcp"
            ],
            "container_patterns": [
                "mcp"
            ],
            "depends_on": ["postgres", "elasticsearch", "neo4j"]
        },
        "postgres": {
            "display_name": "PostgreSQL",
            "description": "Consolidated PostgreSQL database server",
            "images": [
                "postgres:14"
            ],
            "container_patterns": [
                "postgres"
            ]
        },
        "redis": {
            "display_name": "Redis",
            "description": "In-memory cache",
            "images": [
                "redis:7-alpine"
            ],
            "container_patterns": [
                "redis"
            ]
        },
        "elasticsearch": {
            "display_name": "Elasticsearch",
            "description": "Search and analytics engine",
            "images": [
                "docker.elastic.co/elasticsearch/elasticsearch:8.10.4"
            ],
            "container_patterns": [
                "elastic"
            ]
        },
        "webcat": {
            "display_name": "Web Search",
            "description": "Search search service",
            "images": [
                "tmfrisinger/webcat:latest"
            ],
            "container_patterns": [
                "webcat"
            ]
        },
        "neo4j": {
            "display_name": "Neo4j",
            "description": "Graph database",
            "images": [
                "neo4j:5.13.0"
            ],
            "container_patterns": [
                "neo4j"
            ]
        }
    },
    "databases": {
        "slack": {
            "description": "Slack integration data (users, channels, messages)",
            "managed_by": "weave",
            "type": "sql"
        },
        "insightmesh": {
            "description": "Core MCP server data (users, contexts, conversations)",
            "managed_by": "weave", 
            "type": "sql"
        },
        "neo4j": {
            "description": "Knowledge graph database (files, relationships, entities)",
            "managed_by": "weave",
            "type": "graph",
            "connection": {
                "uri_env": "NEO4J_URI",
                "user_env": "NEO4J_USER", 
                "password_env": "NEO4J_PASSWORD",
                "database_env": "NEO4J_DATABASE"
            }
        },
        "elasticsearch": {
            "description": "Search and analytics engine (document indexing, full-text search)",
            "managed_by": "weave",
            "type": "search",
            "connection": {
                "host_env": "ELASTICSEARCH_HOST",
                "port_env": "ELASTICSEARCH_PORT",
                "scheme_env": "ELASTICSEARCH_SCHEME",
                "user_env": "ELASTICSEARCH_USER",
                "password_env": "ELASTICSEARCH_PASSWORD"
            }
        }
    }
}